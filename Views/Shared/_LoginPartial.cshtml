@using Microsoft.AspNetCore.Identity
@using MvcBooks.Models 

@inject SignInManager<User> SignInManager
@inject UserManager<User> UserManager

<ul class="navbar-nav align-items-center">
@if (SignInManager.IsSignedIn(User))
{
     <li class="nav-item me-2">
         <a class="btn btn-sm btn-outline-light" asp-area="" asp-controller="Books" asp-action="Create" title="Add New Book">
             <i class="fas fa-plus"></i> Add Book
         </a>
    </li>
    <li class="nav-item">
        
        <a id="manage" class="nav-link text-light" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @UserManager.GetUserName(User)!</a>
    </li>
    <li class="nav-item">
        <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
            
            <button id="logout" type="submit" class="nav-link btn btn-link text-light border-0">Logout</button>
            
        </form>
    </li>
}
else
{
    <li class="nav-item me-2"> 
        <a class="btn btn-sm btn-outline-light" id="register" asp-area="Identity" asp-page="/Account/Register">Register</a>
    </li>
    <li class="nav-item">
        <a class="btn btn-sm btn-light" id="login" asp-area="Identity" asp-page="/Account/Login">Login</a>
    </li>
}
</ul>