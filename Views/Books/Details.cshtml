@model MvcBooks.Models.Book
@using Microsoft.AspNetCore.Identity
@using MvcBooks.Models
@inject UserManager<User> UserManager
@inject SignInManager<User> SignInManager

@{
    ViewData["Title"] = Model.Title;
}

<h2>Book Details</h2>
<hr />

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        @TempData["SuccessMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}
@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        @TempData["ErrorMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}


<div class="row">
    <div class="col-md-4 mb-3 text-center">
        <img src="@(string.IsNullOrEmpty(Model.CoverImageUrl) ? "/images/placeholder-cover.png" : Model.CoverImageUrl)"
             alt="Cover for @Model.Title"
             class="img-fluid rounded shadow-sm"
             style="max-height: 500px;"
             onerror="this.onerror=null; this.src='/images/placeholder-cover.png';" />

      <div class="mt-3 d-grid">
          @if (!string.IsNullOrEmpty(Model.PdfFilePath))
          {
              <a asp-action="ReadPdf" asp-route-id="@Model.Id" class="btn btn-danger btn-lg">
                  <i class="fas fa-file-pdf"></i> Read PDF
              </a>
          }
          else if (!string.IsNullOrEmpty(Model.EpubFilePath) || (!string.IsNullOrEmpty(Model.BookUrl) && !Model.BookUrl.EndsWith(".pdf", StringComparison.OrdinalIgnoreCase)))
          {
               <a asp-action="Read" asp-route-id="@Model.Id" class="btn btn-success btn-lg">
                  <i class="fas fa-book-open"></i> Read EPUB/Link
              </a>
          }
           else if (!string.IsNullOrEmpty(Model.BookUrl) && Model.BookUrl.EndsWith(".pdf", StringComparison.OrdinalIgnoreCase))
           {
                <a asp-action="ReadPdf" asp-route-id="@Model.Id" class="btn btn-danger btn-lg">
                      <i class="fas fa-file-pdf"></i> Read PDF (URL)
                 </a>
           }
          else
          {
              <button type="button" class="btn btn-secondary btn-lg disabled" aria-disabled="true">
                  <i class="fas fa-times-circle"></i> No Readable Content
              </button>
              <small class="text-muted mt-1">No EPUB or PDF file/link available.</small>
          }
      </div>
    </div>

    <div class="col-md-8 mb-3">
        <h3>@Html.DisplayFor(model => model.Title)</h3>
        @if (!string.IsNullOrWhiteSpace(Model.Author))
        {
            <h5 class="text-muted mb-3">by @Html.DisplayFor(model => model.Author)</h5>
        }

        <dl class="row dl-horizontal">
            <dt class="col-sm-3">Description</dt>
            <dd class="col-sm-9">
                @if (!string.IsNullOrWhiteSpace(Model.Description))
                {
                    @Html.Raw(System.Text.RegularExpressions.Regex.Replace(Html.Encode(Model.Description), @"\n", "<br />"))
                }
                else
                {
                    <span class="text-muted fst-italic">No description provided.</span>
                }
            </dd>

            <dt class="col-sm-3">Published Date</dt>
            <dd class="col-sm-9">@Model.PublishedDate.ToString("yyyy-MM-dd")</dd>

            <dt class="col-sm-3">Categories</dt>
            <dd class="col-sm-9">
                @if (Model.Categories != null && Model.Categories.Any())
                {
                    foreach (var category in Model.Categories)
                    {
                        <span class="badge bg-info me-1">@category.Name</span>
                    }
                }
                else
                {
                    <span class="text-muted">None</span>
                }
            </dd>

             <dt class="col-sm-3">Source</dt>
             <dd class="col-sm-9">
                 @if (!string.IsNullOrEmpty(Model.EpubFilePath))
                 {
                     <span><i class="fas fa-book-open me-1 text-success"></i> Uploaded EPUB: @(Model.EpubFileName ?? "EPUB File")</span>
                     <a asp-action="GetEpub" asp-route-id="@Model.Id" class="ms-2 small" title="Download EPUB"><i class="fas fa-download"></i> Download</a>
                 }
                 else if (!string.IsNullOrEmpty(Model.PdfFilePath))
                 {
                     <span><i class="fas fa-file-pdf me-1 text-danger"></i> Uploaded PDF: @(Model.PdfFileName ?? "PDF File")</span>
                     <a asp-action="GetPdf" asp-route-id="@Model.Id" class="ms-2 small" title="Download PDF"><i class="fas fa-download"></i> Download</a>
                 }
                 else if (!string.IsNullOrEmpty(Model.BookUrl))
                 {
                     <span><i class="fas fa-link me-1 text-primary"></i> External URL: <a href="@Model.BookUrl" target="_blank" rel="noopener noreferrer">@Model.BookUrl</a></span>
                 }
                 else
                 {
                     <span class="text-muted">N/A</span>
                 }
             </dd>

              <dt class="col-sm-3">Added By</dt><dd class="col-sm-9">@(Model.User?.UserName ?? "N/A")</dd>
              <dt class="col-sm-3">Visibility</dt><dd class="col-sm-9">@if(Model.IsPublic){<span class="badge bg-success"><i class="fas fa-eye me-1"></i> Public</span>} else {<span class="badge bg-secondary"><i class="fas fa-lock me-1"></i> Private</span>}</dd>
        </dl>

        <div class="mt-4">
             @if (SignInManager.IsSignedIn(User))
             {
                 var currentUserId = UserManager.GetUserId(User);
                 @if (Model.UserId != null && Model.UserId == currentUserId)
                 {
                     <a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-warning">
                         <i class="fas fa-edit"></i> Edit
                     </a>
                    <a asp-action="Delete" asp-route-id="@Model.Id" class="btn btn-danger ms-2">
                        <i class="fas fa-trash-alt"></i> Delete
                    </a>
                 }
             }
        </div>
    </div>
</div>

@section Scripts {
     <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" />
}