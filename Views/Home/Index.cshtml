@model MvcBooks.Models.ViewModels.HomeViewModel
@using Microsoft.AspNetCore.Identity
@inject SignInManager<User> SignInManager

@{
    ViewData["Title"] = "Library Home";
}

@* --- Hero Billboard Section (Search Bar Removed) --- *@
<div class="hero-billboard">
    <div class="hero-content text-center">
        @* --- Optional: Restore Original Hero Text --- *@
         <h1 class="display-5 fw-bold hero-title">Explore Books, For Free!</h1>
         <p class="fs-5 hero-subtitle">Browse thousands of books across every genre, available here.</p>
        @* --- End Optional --- *@
    </div>
</div>
@* --- END Hero Billboard Section --- *@


<div class="library-home container">

    @* --- START: Filter Section --- *@
    @if (Model.FilterableCategories.Any())
    {
        <div class="card mb-4 shadow-sm filter-card">
            <div class="card-body">
                <h5 class="card-title mb-3"><i class="fas fa-filter me-2"></i>Filter by Category</h5>
                <form method="get" asp-controller="Home" asp-action="Index">
                    <div class="row filter-options">
                        @foreach (var category in Model.FilterableCategories)
                        {
                            <div class="col-lg-2 col-md-3 col-sm-4 col-6 mb-2">
                                <div class="form-check">
                                    <input class="form-check-input"
                                           type="checkbox"
                                           name="selectedCategoryIds"
                                           value="@category.Id"
                                           id="filter_cat_@category.Id"
                                           @(Model.SelectedCategoryIds?.Contains(category.Id) ?? false ? "checked" : "") />
                                    <label class="form-check-label" for="filter_cat_@category.Id">
                                        @category.Name
                                    </label>
                                </div>
                            </div>
                        }
                    </div>
                    <div class="mt-3 d-flex justify-content-end">
                        @if (Model.SelectedCategoryIds != null && Model.SelectedCategoryIds.Any())
                        {
                             <a asp-controller="Home" asp-action="Index" class="btn btn-outline-secondary me-2">
                                <i class="fas fa-times me-1"></i> Clear Filters
                             </a>
                        }
                        <button type="submit" class="btn btn-themed-secondary">
                           <i class="fas fa-check me-1"></i> Apply Filters
                        </button>
                    </div>
                </form>
            </div>
        </div>
        <hr class="my-4" /> @* Separator after filter section *@
    }
    @* --- END: Filter Section --- *@


    @* --- START: User History Row (Conditional) --- *@
    @if (SignInManager.IsSignedIn(User) && Model.UserHistoryBooks.Any() && (Model.SelectedCategoryIds == null || !Model.SelectedCategoryIds.Any()))
    {
        <div class="category-row">
            <h2 class="category-title">My Recently Added Books</h2>
            <div class="book-list-wrapper">
                <div class="book-list">
                    @foreach (var book in Model.UserHistoryBooks)
                    {
                        <div class="book-item">
                            <a asp-controller="Books" asp-action="Details" asp-route-id="@book.Id" title="@book.Title">
                                <img src="@(string.IsNullOrEmpty(book.CoverImageUrl) ? "/images/placeholder-cover.png" : book.CoverImageUrl)"
                                     alt="Cover for @book.Title"
                                     class="book-cover"
                                     onerror="this.onerror=null; this.src='/images/placeholder-cover.png';" />
                                <span class="book-title-sm">@book.Title</span>
                            </a>
                        </div>
                    }
                </div>
            </div>
             <hr class="my-5"/> @* Separator after user history row *@
        </div>
    }
    @* --- END: User History Row --- *@


    @* --- START: Public Category Rows --- *@
    @if (!Model.PublicCategories.Any())
    {
        <div class="text-center mt-4">
            @* Display specific message if filters resulted in no matches *@
            @if (Model.SelectedCategoryIds != null && Model.SelectedCategoryIds.Any())
            {
                <p>No public books found matching your selected filters.</p>
                 <a asp-controller="Home" asp-action="Index" class="btn btn-sm btn-link">Clear Filters</a>
            }
            @* Display general message only if no filters are applied AND history isn't shown (or user logged out) *@
            else if (!SignInManager.IsSignedIn(User) || !Model.UserHistoryBooks.Any() || (Model.SelectedCategoryIds != null && Model.SelectedCategoryIds.Any()))
            {
                 <p>No public books found. Check back later or add your own!</p>
            }
        </div>
    }
    else
    {
        @foreach (var category in Model.PublicCategories)
        {
            <div class="category-row"> @* Removed mb-5 from here, spacing handled by hr or natural flow *@
                <h2 class="category-title">@category.Name</h2>
                <div class="book-list-wrapper">
                    <div class="book-list">
                        @foreach (var book in category.Books)
                        {
                            <div class="book-item">
                                <a asp-controller="Books" asp-action="Details" asp-route-id="@book.Id" title="@book.Title">
                                    <img src="@(string.IsNullOrEmpty(book.CoverImageUrl) ? "/images/placeholder-cover.png" : book.CoverImageUrl)"
                                         alt="Cover for @book.Title"
                                         class="book-cover"
                                         onerror="this.onerror=null; this.src='/images/placeholder-cover.png';" />
                                    <span class="book-title-sm">@book.Title</span>
                                </a>
                            </div>
                        }
                    </div>
                </div>
            </div>
        }
    }
    @* --- END: Public Category Rows --- *@

</div> @* End .library-home .container *@

@* Section for scripts if needed (e.g., if Font Awesome isn't global) *@
@* @section Scripts { ... } *@